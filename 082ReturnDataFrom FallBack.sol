

/*
1. 引⾔ 
    • 课程⽬标：学习如何在Fallback函数中返回数据。
    • 回顾上⼀节内容：设置了⼀个有问题的代理合约及其实现合约Counter V1，但⽆法返回数据。 
2. 问题描述 
    • 代理合约⽆法获取计数数据的问题。
    • 部署相关合约并验证问题存在。
3. 代理合约的设置 
    • 部署Buggy Proxy合约和Counter V1合约。 
    • 配置代理合约的实现为Counter V1。 
    • 验证设置是否成功。
    • 调⽤Counter V1的增量函数（Inc）并检查计数器。 
4. 修复Fallback函数 
    • 修改Fallback函数使其能够返回数据。
    • 使⽤delegatecall返回数据的机制。 
    • 采⽤OpenZeppelin的透明可升级代理代码进⾏修改。
5. 具体实现步骤 
    • 详细讲解汇编代码：数据拷⻉和delegatecall调⽤。 
    • 解释每⼀⾏汇编代码的作⽤。
    • 处理delegatecall的输出结果。 
6. 测试修复后的合约 
    • 部署并测试修改后的Buggy Proxy合约。 
    • 验证计数器功能是否正常⼯作。
7.升级合约版本 
    • 部署Counter V2合约并升级代理合约的实现。 
    • 验证升级后合约的功能。
8. 后续内容预告 
    • 下⼀节课程内容预告：移除实现和管理员状态变量并将其存储在其他地⽅。

编程作业 
作业描述： 请编写⼀个透明可升级代理合约，实现以下功能： 
    1. 部署⼀个代理合约和两个版本的实现合约（Counter V1和Counter V2）。 
    2. 在代理合约中实现能够返回数据的Fallback函数。
    3. 使⽤汇编代码实现delegatecall并返回数据。 
    4. 编写测试⽤例，验证从V1升级到V2的过程，以及各函数的正确性。 
作业提⽰：
    • 确保在代理合约的Fallback函数中使⽤汇编代码来处理delegatecall。 
    • 测试⽤例应包括部署合约、调⽤增量和减量函数，以及验证数据返回。
    • 注意在升级合约版本时，确保状态变量的正确性。


*/ 