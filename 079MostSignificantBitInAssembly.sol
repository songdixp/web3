

/*
⼀、课程⽬标
    1. 了解最重要位（MSB）的概念及其在⼆进制表⽰中的位置
    2. 学习如何使⽤汇编语⾔（Assembly）实现MSB函数
    3. 理解使⽤汇编语⾔优化Solidity代码的优势

⼆、课程内容
    1. 概述最重要位（MSB）
        ◦MSB函数的定义与⽤途
        ◦⼆进制表⽰及MSB的位置⽰例
        ◦⽰例：8的MSB位置
    2. 将MSB函数转换为汇编语⾔
        ◦为什么使⽤汇编语⾔优化代码?
        ◦汇编语⾔的基本操作：⽐较、⼤于操作符、位移、赋值?

3. 具体实现步骤
    ◦初始化和注释掉原代码
    ◦使⽤汇编语⾔实现简单部分

    ▪⽰例：⽐较x是否⼤于或等于2
    ▪使⽤汇编语⾔进⾏⽐较和赋值
        ◦逐步实现复杂部分

    ▪⽰例：⽐较x是否⼤于或等于4，右移x并更新MSB
    ▪使⽤位运算符“或”替代加法运算
        ◦完整代码⽰例：⽐较x是否⼤于或等于16和256，并更新MSB

4. 部署和测试合约
    ◦部署合约并调⽤MSB函数进⾏测试
    ◦⽰例：调⽤MSB函数，测试输⼊0和最⼤值2^256-1
    ◦⽐较使⽤汇编语⾔前后的Gas消耗
    ▪⽰例：函数形式的Gas消耗vs汇编语⾔形式的Gas消耗

三、编程作业
    任务：实现⼀个最重要位（MSB）函数，并在Solidity合约中使⽤汇编语⾔优化其性能
    要求：
        1. 编写⼀个Solidity合约，包含⼀个计算整数最重要位的函数。
        2. 使⽤汇编语⾔优化该函数，并⽐较优化前后的Gas消耗。
        3. 在注释中详细说明每⼀步的实现思路和汇编代码的作⽤。



*/ 