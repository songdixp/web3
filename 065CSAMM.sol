
// SPDX-License-Identifier: MIT
pragma solidity 0.8.23;


/*
constant sum market maker：恒定总和做市商。
关于什么是恒定总和，没有找到很精准的说明，大概是保持几种资产的储备数量总和恒定的意思。
比如要求它屯的股票a+股票b=常数k

做市商（market maker）制度，在香港又叫庄家制度。由特定的金融机构或个人（即“做市商”）在证券交易市场中，通过向双边报价（买入价和卖出价）持续参与交易，为市场提供流动性和稳定性。
做市商可以理解为就是个股票超市，屯股票，卖股票，会赚差价，也会担风险。下面是一个详细运作过程的例子。

背景
市场：XYZ 股票交易市场
证券：XYZ 公司股票
做市商：做市商 A，负责为 XYZ 股票提供流动性。
投资者：B、C，分别为市场中的买家和卖家。

做市商的初始报价：
做市商 A 提供双边报价（买入价和卖出价），例如：

买入价（Bid）：99 元/股
卖出价（Ask）：101 元/股
买卖价差：2 元
做市商承诺：
无论市场是否有买家或卖家，他都愿意以买入价买入股票，以卖出价卖出股票。
初始库存：做市商持有 1000 股 XYZ 股票

场景 1：投资者 B 想卖出股票
投资者 B 想卖出 200 股 XYZ 股票。
B 可以选择与做市商的买入价（99 元）成交。
交易过程：
做市商 A 以 99 元/股的价格买入 B 的 200 股。
结果：
做市商 A：持有股票增加到 1200 股。
投资者 B：收到 19800 元（200 股 × 99 元）。
做市商的库存增加后，他可能会调整报价以降低买入股票的风险，例如：

新的买入价：98 元/股
新的卖出价：100 元/股

场景 2：投资者 C 想买入股票
投资者 C 想买入 150 股 XYZ 股票。
C 可以选择与做市商的卖出价（100 元）成交。
交易过程：
做市商 A 以 100 元/股的价格卖出 150 股给 C。
结果：
做市商 A：持有股票减少到 1050 股。
投资者 C：支付 15000 元（150 股 × 100 元），获得股票。
做市商的库存减少后，他可能会再次调整报价以吸引更多卖家，例如：

新的买入价：99 元/股
新的卖出价：101 元/股

1.主要功能介绍
•
交换（Swap）：允许⽤⼾交换⼀个代币为另⼀个代币。
•
添加流动性（AddLiquidity）：⽤⼾可以添加代币到池⼦中。
•
移除流动性（RemoveLiquidity）：⽤⼾可以从池⼦中移除代币。

2.状态变量和构造函数
•
ERC20代币：定义两个不可变的ERC20代币（token0和token1）。
•
储备量（Reserves）：跟踪合约中锁定的每种代币的数量。
•
总份额和⽤⼾份额：跟踪总份额和各个⽤⼾的份额。
•
构造函数：初始化代币地址和状态变量。
3.核⼼函数实现
•
交换逻辑：确保输⼊代币有效，计算输出代币数量，更新储备量，最后将代币转移给⽤⼾。
•
添加和移除流动性：计算⽤⼾应得的份额，更新储备量，根据份额转移相应的代币。
4.代码优化
•
重构：优化交换函数，以减少冗余代码和提⾼gas效率。
5.部署和测试
•
部署：演⽰如何部署ERC20代币和AMM合约。
•
功能测试：通过实际交互演⽰添加流动性、交换和移除流动性的过程。
*/ 