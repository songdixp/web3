

// SPDX-License-Identifier: MIT
pragma solidity 0.8.23;

/*
1.简介
    •课程⽬标：构建⼀个智能合约，使其始终返回数字42。
    •介绍字节码的基本概念及其在Solidity中的应⽤。
    
2.运⾏时代码 (Runtime Code)
    •定义：合约在执⾏时的代码。
    •⽰例：如何编写⼀个总是返回42的合约。
    •相关操作码：
        ◦ RETURN ：返回数据。
        ◦操作步骤：
            i. 将42存储到内存。
            ii. 返回内存中的32字节数据。
3. 创建时代码 (Creation Code)
    •定义：⽤于部署合约的代码。
    •⽰例：如何编写创建代码以部署上述合约。
    •相关操作码：
        ◦ MSTORE ：将数据存储到内存。
        ◦ 操作步骤：
            i. 将运⾏时代码存储到内存。
            ii. 返回运⾏时代码以部署合约。
4.⼯⼚合约 (Factory Contract)
    •定义：⽤于部署其他合约的合约。
    •⽰例：如何编写⼯⼚合约来部署返回42的合约。
    •相关操作码：
        ◦C REATE ：部署合约。
        ◦ 操作步骤：
            i. 准备创建代码。
            ii. 使⽤汇编语⾔部署合约。
            iii. 记录新部署的合约地址。
5.测试与验证
    • 定义接⼝以测试合约功能。
    • 部署并验证合约是否正确返回42。
编程作业
    ⽬标：编写⼀个简单的Solidity⼯⼚合约，部署⼀个返回42的智能合约，并验证其功能。
    步骤：
    1. 编写⼀个返回42的智能合约字节码。
    2. 编写创建代码以部署该合约。
    3. 编写⼯⼚合约以部署上述合约。
    4. 编写⼀个接⼝来测试新部署的合约。
提⽰：
    •使⽤ RETURN 操作码返回42。
    •使⽤ MSTORE 操作码将42存储到内存。
    •使⽤ CREATE 操作码部署合约。


*/ 