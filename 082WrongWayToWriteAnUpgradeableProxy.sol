/*

⼀、介绍 
1. 课程⽬标：重现透明可升级代理，并探讨其错误实现。
2. 视频系列内容：
    ◦ 错误实现可升级代理合约
    ◦ 分析错误实现中的问题
    ◦ 返回回退函数中的数据， fallback 的数据
    ◦ 在智能合约的存储槽中写⼊任意数据
    ◦ 存储实现合约地址和管理员地址
    ◦ 分离管理员和⽤⼾界⾯
    ◦ 编写代理管理员合约
    ◦ 实际操作演⽰

⼆、错误实现可升级代理合约 
1. 基础实现：
    ◦ 创建初始合约  CounterV1 ，包含  count  状态变量和  increment  函数。 
    ◦ 升级⾄  CounterV2 ，添加  decrement  函数。 
    ◦ 编写代理合约  BuggyProxy ，初始设置为  CounterV1 ，之后升级为  CounterV2 。 
2. 代理合约设计：
    ◦ 存储实现合约地址和管理员地址。
    ◦ 管理员能够升级实现合约。
    ◦ 使⽤  delegatecall  转发请求⾄实现合约。 
三、错误分析 
    1. 存储布局不⼀致：
        ◦ BuggyProxy  合约的存储布局与实现合约不⼀致，导致调⽤  increment  函数时修改了实现合约地址。
    2. 回退函数⽆法返回数据：
        ◦ 通过回退函数调⽤实现合约的  count  函数时，⽆法返回数据。 
四、解决⽅案预告 
    1. 对⻬存储布局：
        ◦ 确保所有实现合约与代理合约的存储布局⼀致。
    2. 改进回退函数：
        ◦ 修改回退函数以便能够返回数据。

编程作业 
任务：实现⼀个简单的可升级代理合约，并解决上述错误。
步骤：
    1. 编写  CounterV1  合约，包含  count  状态变量和  increment  函数。 
    2. 编写  CounterV2  合约，添加  decrement  函数。 
    3. 编写代理合约  BuggyProxy ，初始设置为  CounterV1 。 
    4. 使⽤  delegatecall  实现函数调⽤转发。 
    5. 解决存储布局不⼀致的问题。
    6. 修改回退函数，确保能够返回数据。
*/ 